server.context-path=/spring
#服务端口，8080被另一服务占用
server.port=9998
server.servlet-path=/
 #静态目录配置
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
#配置数据库
spring.datasource.url=jdbc:mysql://211.149.184.96:3306/zhyy?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false
spring.datasource.data-username=root
spring.datasource.data-password=tanjun1536
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#mybatis
mybatis.type-aliases-package=com.java.entity
mybatis.mapper-locations=classpath:mapper/*.xml

#mapper
#mappers \u591A\u4E2A\u63A5\u53E3\u65F6\u9017\u53F7\u9694\u5F00
mapper.mappers=com.java.util.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


#spring.activemq.broker-url=tcp://127.0.0.1:61616
## 在考虑结束之前等待的时间
##spring.activemq.close-timeout=15s
## 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
#spring.activemq.in-memory=true
# 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
#spring.activemq.non-blocking-redelivery=false
# 等待消息发送响应的时间。设置为0等待永远。
#spring.activemq.send-timeout=0
#默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置
#spring.jms.pub-sub-domain=true
#账号
#spring.activemq.user=admin
## 密码
#spring.activemq.password=admin
# 是否信任所有包
#spring.activemq.packages.trust-all=
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=
# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
#spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。
#spring.activemq.pool.create-connection-on-startup=true
# 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
spring.activemq.pool.enabled=false
# 连接过期超时。
#spring.activemq.pool.expiry-timeout=0ms
# 连接空闲超时
#spring.activemq.pool.idle-timeout=30s
# 连接池最大连接数
#spring.activemq.pool.max-connections=1
# 每个连接的有效会话的最大数目。
#spring.activemq.pool.maximum-active-session-per-connection=500
# 当有"JMSException"时尝试重新连接
#spring.activemq.pool.reconnect-on-exception=true
# 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
#spring.activemq.pool.time-between-expiration-check=-1ms
# 是否只使用一个MessageProducer
#spring.activemq.pool.use-anonymous-producers=true
#微信支付属性配置
wechat.appid=wxbea2aaabdf701e3f
#公众号appkey
wechat.appsecret=04c12cb34f2d6d4b3915056d1f8946b3
#商户号
wechat.mchId=1527296211
#子商户公众账号
wechat.subAppid=123 
#子商户号
wechat.subMchId=456
#设备号
wechat.deviceInfo=WEB
#指定支付方式:限制用户不能使用信用卡支付
wechat.limitPay=no_credit
#商户key
wechat.key=qjyxke935kmeez12kfr231ll9dc1l0zp
#回调地址
wechat.notifyUrl=http://qjyx.info/synthesisPay/wechatPublicBack
#证书地址
wechat.certUrl=src/main/resources/apiclient_cert.p12
miniprogram.appid=wxea4db86d7b34016b
miniprogram.appsecret=
logging.config=classpath:logback-userAuth.xml
#rabbitmq配置
#rabbitmq
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#spring.rabbitmq.virtual-host=/
##消费者数量
#spring.rabbitmq.listener.simple.concurrency= 10
#spring.rabbitmq.listener.simple.max-concurrency= 10
##消费者每次从队列获取的消息数量
#spring.rabbitmq.listener.simple.prefetch= 1
##消费者自动启动
#spring.rabbitmq.listener.simple.auto-startup=true
##消费失败，自动重新入队
#spring.rabbitmq.listener.simple.default-requeue-rejected= true
##启用发送重试
#spring.rabbitmq.template.retry.enabled=true
#spring.rabbitmq.template.retry.initial-interval=1000
#spring.rabbitmq.template.retry.max-attempts=3
#spring.rabbitmq.template.retry.max-interval=10000
#spring.rabbitmq.template.retry.multiplier=1.0
#Redis配置
# Redis数据库索引（默认为0）
#spring.redis.database=0 
# Redis服务器地址 （默认为127.0.0.1）
#spring.redis.host=127.0.0.1
# Redis服务器连接端口 （默认为6379）
#spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=
# 连接超时时间（毫秒）
#spring.redis.timeout=2000
#his参数start=============================================================
#查询网上体检套餐类型（VIP等级）业务代码
hisProperties.requestCodeOne=HS10201
 #查询网上体检套餐业务代码
hisProperties.requestCodeTwo=HS10222
  #根据套餐ID查询明细业务代码
hisProperties.requestCodeThree=HS10219
  #根据HIS套餐ID查询套餐项目业务代码
hisProperties.requestCodeFour=PE1002
  #查询所有体检业务代码
hisProperties.requestCodeFive=PE1013
  #保存个人预约记录（自选项目）业务代码
hisProperties.requestCodeSix=PE1019
  #查询网上预约记录业务代码
hisProperties.requestCodeSeven=HS10205
  #取消网上预约记录业务代码
hisProperties.requestCodeEight=HS10321
  # 根据登记号查询历次体检记录业务代码
hisProperties.requestCodeNine=HS10233
  #根据就诊ID查询总检建议业务代码
hisProperties.requestCodeTen=HS10002
  #根据就诊ID查询体检项目细项结果业务代码
hisProperties.requestCodeEleven=HS10003
  #根据病人ID查询体检待缴费记录业务代码
hisProperties.requestCodeTwelve=PE3001
  #根据admId（PE3001接口返回）查询体检待缴费项目业务代码
hisProperties.requestCodeThirteen=PE3002
  #支付接口业务代码
hisProperties.requestCodeFourteen=PE3003
  #远程调用接口方法
hisProperties.METHOD=PublicMethod
  #远程调用url地址
hisProperties.ADDRESS=http://192.9.250.15/csp/i-wechat/DHC.WeChat.BS.ALIService.cls?WSDL
  #his参数end==================================================================  